#pragma once

#include <cstdint>
#include <string>

namespace ycsbc {

// An expression that generates a sequence of values, following some distribution (Uniform, Zipfian, Sequential, etc.).
template <typename V>
class Generator {
public:
	// Generate the next value in the distribution.
	virtual V nextValue() = 0;

	/*
	 * Return the previous value generated by the distribution; e.g., returned from the last {@link Generator#nextValue()}
	 *  call.
	 * Calling {@link #lastValue()} should not advance the distribution or have any side effects. If {@link #nextValue()}
	 * has not yet been called, {@link #lastValue()} should return something reasonable.
	 */
	virtual V lastValue() = 0;

	// Destructor
	virtual ~Generator(){} 
};

} // ycsbc

