#include "testhdr.h"

#test test_6
	  const int CUT = 2;
	  
	  fputs("Multi-thread test 6: Inserts, finds and deletes in two seperate databases\n", stderr);
	  
	  prepareVolume();
	  
	  db_handle *db1 = newDb("dat0.dat", PATHNAME, (SIZE/CUT));
	  db_handle *db2 = newDb("dat1.dat", PATHNAME, (SIZE/CUT));
	  
	  pthread_t t1, t2;
	  
	  fputs("Adding random keys and values to databases...\n", stderr);
	  
	  fail_unless(pthread_create(&t1, NULL, randInsert, db1) == 0, "Thread 1 Error");
          fail_unless(pthread_create(&t2, NULL, randInsert, db2) == 0, "Thread 2 Error");
	  
	  fail_unless(pthread_join(t1, NULL) == 0, "Could not join thread 1");
	  fail_unless(pthread_join(t2, NULL) == 0, "Could not join thread 2");
	  
	  fputs("Looking for keys...\n", stderr);
	  
	  fail_unless(pthread_create(&t1, NULL, randFind, db1) == 0, "Thread 1 Error");
          fail_unless(pthread_create(&t2, NULL, randFind, db2) == 0, "Thread 2 Error");
	  
	  fail_unless(pthread_join(t1, NULL) == 0, "Could not join thread 1");
	  fail_unless(pthread_join(t2, NULL) == 0, "Could not join thread 2");
	  
	  fputs("Deleting keys...\n", stderr);
	  
	  fail_unless(pthread_create(&t1, NULL, randDelete, db1) == 0, "Thread 1 Error");
          fail_unless(pthread_create(&t2, NULL, randDelete, db2) == 0, "Thread 2 Error");
	  
	  fail_unless(pthread_join(t1, NULL) == 0, "Could not join thread 1");
	  fail_unless(pthread_join(t2, NULL) == 0, "Could not join thread 2");
	  
	  fputs("Multi-thread test 6 done.\n", stderr);
